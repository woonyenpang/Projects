df_house$long <- NULL
## Changing sqft_basement to basement (1 for yes and 0 for no)
df_house$basement <- df_house$sqft_basement
df_house$sqft_basement <- NULL
df_house$basement = ifelse(df_house$"basement">0,"1","0")
knitr::opts_chunk$set(echo = TRUE)
rating <- c(5,2,3,2,4,3,10)
boxplot(rating, col="yellow")
title("Boxplot of ratings")
#There is an outlier in the rating data series.
knitr::include_graphics("https://data.library.virginia.edu/files/diagnostics3.jpeg")
# set working directory
setwd("C:/Users/woony/OneDrive - Universiti Malaya/WQD 7004/Group Project")
# import 2 datasets to be stored in 2 different dataframes
library(readr)
df_house <- read_csv("kc_house_data.csv")
library(readxl)
df_zipcode <- read_excel("uszips.xlsx")
# KC_Housesales_Data
head(df_house)
colnames(df_house)
# US Zip Codes Database
head(df_zipcode)
colnames(df_zipcode)
## Removing the unnecessary information
df_house$id <- NULL
df_house$sqft_living <- NULL
df_house$sqft_lot <- NULL
df_house$view <- NULL
df_house$grade <- NULL
df_house$view <- NULL
df_house$sqft_above <- NULL
df_house$zip <- df_house$zipcode
df_house$zipcode <- NULL
df_house$lat <- NULL
df_house$long <- NULL
## Changing sqft_basement to basement (1 for yes and 0 for no)
df_house$basement <- df_house$sqft_basement
df_house$sqft_basement <- NULL
df_house$basement = ifelse(df_house$"basement">0,"1","0")
## Changing yr_built to age (yes or no)
library("stringr")
df_house$date <- str_sub(df_house$date, - 4, - 1) #Extract the year from date of building sold
df_house$date <- as.numeric(df$date) #changing it to numeric for subtraction operation
## Removing the unnecessary information
df_house$id <- NULL
df_house$sqft_living <- NULL
df_house$sqft_lot <- NULL
df_house$view <- NULL
df_house$grade <- NULL
df_house$view <- NULL
df_house$sqft_above <- NULL
df_house$zip <- df_house$zipcode
df_house$zipcode <- NULL
df_house$lat <- NULL
df_house$long <- NULL
## Changing sqft_basement to basement (1 for yes and 0 for no)
df_house$basement <- df_house$sqft_basement
df_house$sqft_basement <- NULL
df_house$basement = ifelse(df_house$"basement">0,"1","0")
df_house$basement = ifelse(df_house$basement>0,"1","0")
library(readr)
df <- read_csv("kc_house_data.csv")
## Removing the unnecessary information
df$id <- NULL
df$sqft_living <- NULL
df$sqft_lot <- NULL
df$view <- NULL
df$grade <- NULL
df$view <- NULL
df$sqft_above <- NULL
df$zip <- df$zipcode
df$zipcode <- NULL
df$lat <- NULL
df$long <- NULL
## Changing sqft_basement to basement (1 for yes and 0 for no)
df$basement <- df$sqft_basement
df$sqft_basement <- NULL
df$basement = ifelse(df$"basement">0,"1","0")
## Changing yr_built to age (yes or no)
library("stringr")
df$date <- str_sub(df$date, - 4, - 1) #Extract the year from date of building sold
df$date <- as.numeric(df$date) #changing it to numeric for subtraction operation
df$age <- df$date - df$yr_built #age of building when sold is calculated
df$date <- NULL
df$yr_built <- NULL
## Changing yr_renovated to renovation (1 for yes and 0 for no)
df$renovation = ifelse(df$"yr_renovated">0,"1","0")
df$yr_renovated <- NULL
## Checking for missing values
sum(is.na(df))
## Saving new dataframe in csv
write.csv(df,'house_data.csv',row.names=FALSE)
# Detecting Outliers
boxplot(df$price, ylab = "price")
boxplot(df$bedrooms, ylab = "bedroom")
df_house <- read_csv("kc_house_data.csv")
df_zipcode <- read_excel("uszips.xlsx")
df_house$id <- NULL
df_house$sqft_living <- NULL
df_house$sqft_lot <- NULL
df_house$view <- NULL
df_house$grade <- NULL
df_house$view <- NULL
df_house$sqft_above <- NULL
df_house$zip <- df_house$zipcode
df_house$zipcode <- NULL
df_house$lat <- NULL
df_house$long <- NULL
df_house$basement <- df_house$sqft_basement
df_house$sqft_basement <- NULL
df_house$basement = ifelse(df_house$basement>0,"1","0")
library("stringr")
df_house$date <- str_sub(df_house$date, - 4, - 1) #Extract the year from date of building sold
df_house$date <- as.numeric(df_house$date) #changing it to numeric for subtraction operation
df_house$age <- df_house$date - df_house$yr_built #age of building when sold is calculated
df_house$date <- NULL
df_house$yr_built <- NULL
df_house$renovation = ifelse(df_house$"yr_renovated">0,"1","0")
df_house$yr_renovated <- NULL
## Checking for missing values
sum(is.na(df_house))
## Saving new dataframe in csv
write.csv(df_house,'house_data.csv',row.names=FALSE)
# Detecting Outliers
boxplot(df_house$price, ylab = "price")
boxplot(df_house$bedrooms, ylab = "bedroom")
df_house <- read_csv("kc_house_data.csv")
df_zipcode <- read_excel("uszips.xlsx")
## Removing the unnecessary information
df_house$id <- NULL
df_house$sqft_living <- NULL
df_house$sqft_lot <- NULL
df_house$view <- NULL
df_house$grade <- NULL
df_house$view <- NULL
df_house$sqft_above <- NULL
df_house$zip <- df_house$zipcode
df_house$zipcode <- NULL
df_house$lat <- NULL
df_house$long <- NULL
## Changing sqft_basement to basement (1 for yes and 0 for no)
df_house$basement <- df_house$sqft_basement
df_house$sqft_basement <- NULL
df_house$basement = ifelse(df_house$basement>0,"1","0")
## Changing yr_built to age
library("stringr")
df_house$date <- str_sub(df_house$date, - 4, - 1) #Extract the year from date of building sold
df_house$date <- as.numeric(df_house$date) #changing it to numeric for subtraction operation
df_house$age <- df_house$date - df_house$yr_built #age of building when sold is calculated
df_house$date <- NULL
df_house$yr_built <- NULL
## Changing yr_renovated to renovation (1 for yes and 0 for no)
df_house$renovation = ifelse(df_house$"yr_renovated">0,"1","0")
df_house$yr_renovated <- NULL
## Checking for missing values
sum(is.na(df_house))
## Saving new dataframe in csv
write.csv(df_house,'house_data.csv',row.names=FALSE)
# Detecting Outliers
boxplot(df_house$price, ylab = "price")
boxplot(df_house$bedrooms, ylab = "bedroom")
# reexamine the structure of the dataframe now
str(df_house)
## Removing the unnecessary information
df_zipcode <- df_zipcode[ -c(2:3,5,7:18) ]
## Removing duplicate rows using the zipcode variable
library(dplyr)
df_zipcode %>% distinct(zip, .keep_all= TRUE)
write.csv(df_zipcode,'zipcode.csv',row.names=FALSE)
# Merging 2 datasets
df <- merge(df_house,df_zipcode,by="zip")
# Examine the frequency table of city and state_name
table(df$city)
table(df$state_name)
# Since all state name is Washington, we can omit the state_name column
df$state_name <- NULL
# print the first few rows of the merged data
head(df, 10)
str(df)
str(df_new)
library(readr)
df_house <- read_csv("house_data.csv")
df_zip <- read_csv("zipcode.csv")
## Merging 2 datasets
df_new <- merge(df_house,df_zip,by="zip")
# Counting the number of groups with the same zip code and city
freq_zipcode <- as.data.frame(table(df_new$zip))
freq_zipcode %>% rename(zipcode = Var1)
freq_city <- as.data.frame(table(df_new$city))
freq_city %>% rename(city_name = Var1)
freq_state_name <- as.data.frame(table(df_new$state_name))
freq_state_name %>% rename(state_name = Var1)
## Since all state name is Washington, we can omit the state_name column
df_new$state_name <- NULL
str(df_new)
write.csv(df_new,'merged.csv',row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
rating <- c(5,2,3,2,4,3,10)
boxplot(rating, col="yellow")
title("Boxplot of ratings")
#There is an outlier in the rating data series.
knitr::include_graphics("https://data.library.virginia.edu/files/diagnostics3.jpeg")
# set working directory
setwd("C:/Users/woony/OneDrive - Universiti Malaya/WQD 7004/Group Project")
# import 2 datasets to be stored in 2 different dataframes
library(readr)
df_house <- read_csv("kc_house_data.csv")
library(readxl)
df_zipcode <- read_excel("uszips.xlsx")
# KC_Housesales_Data
head(df_house)
colnames(df_house)
# US Zip Codes Database
head(df_zipcode)
colnames(df_zipcode)
## Removing the unnecessary information
df_house$id <- NULL
df_house$sqft_living <- NULL
df_house$sqft_lot <- NULL
df_house$view <- NULL
df_house$grade <- NULL
df_house$view <- NULL
df_house$sqft_above <- NULL
df_house$zip <- df_house$zipcode
df_house$zipcode <- NULL
df_house$lat <- NULL
df_house$long <- NULL
## Changing sqft_basement to basement (1 for yes and 0 for no)
df_house$basement <- df_house$sqft_basement
df_house$sqft_basement <- NULL
df_house$basement = ifelse(df_house$basement>0,"1","0")
## Changing yr_built to age
library("stringr")
df_house$date <- str_sub(df_house$date, - 4, - 1) #Extract the year from date of building sold
df_house$date <- as.numeric(df_house$date) #changing it to numeric for subtraction operation
df_house$age <- df_house$date - df_house$yr_built #age of building when sold is calculated
df_house$date <- NULL
df_house$yr_built <- NULL
## Changing yr_renovated to renovation (1 for yes and 0 for no)
df_house$renovation = ifelse(df_house$"yr_renovated">0,"1","0")
df_house$yr_renovated <- NULL
## Checking for missing values
sum(is.na(df_house))
## Saving new dataframe in csv
write.csv(df_house,'house_data.csv',row.names=FALSE)
# Detecting Outliers
boxplot(df_house$price, ylab = "price")
boxplot(df_house$bedrooms, ylab = "bedroom")
# reexamine the structure of the dataframe now
str(df_house)
## Removing the unnecessary information
df_zipcode <- df_zipcode[ -c(2:3,5,7:18) ]
## Removing duplicate rows using the zipcode variable
library(dplyr)
df_zipcode %>% distinct(zip, .keep_all= TRUE)
write.csv(df_zipcode,'zipcode.csv',row.names=FALSE)
df <- merge(df_house,df_zipcode,by="zip")
# Examine the frequency table of city and state_name
table(df$city)
table(df$state_name)
# Since all state name is Washington, we can omit the state_name column
df$state_name <- NULL
# print the first few rows of the merged data
head(df, 10)
str(df)
library(readr)
df <- read_csv("kc_house_data.csv")
## Removing the unnecessary information
df$id <- NULL
df$sqft_living <- NULL
df$sqft_lot <- NULL
df$view <- NULL
df$grade <- NULL
df$view <- NULL
df$sqft_above <- NULL
df$zip <- df$zipcode
df$zipcode <- NULL
df$lat <- NULL
df$long <- NULL
## Changing sqft_basement to basement (1 for yes and 0 for no)
df$basement <- df$sqft_basement
df$sqft_basement <- NULL
df$basement = ifelse(df$"basement">0,"1","0")
## Changing yr_built to age (yes or no)
library("stringr")
df$date <- str_sub(df$date, - 4, - 1) #Extract the year from date of building sold
df$date <- as.numeric(df$date) #changing it to numeric for subtraction operation
df$age <- df$date - df$yr_built #age of building when sold is calculated
df$date <- NULL
df$yr_built <- NULL
## Changing yr_renovated to renovation (1 for yes and 0 for no)
df$renovation = ifelse(df$"yr_renovated">0,"1","0")
df$yr_renovated <- NULL
## Checking for missing values
sum(is.na(df))
## Saving new dataframe in csv
write.csv(df,'house_data.csv',row.names=FALSE)
# Detecting Outliers
boxplot(df$price, ylab = "price")
boxplot(df$bedrooms, ylab = "bedroom")
str(df)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
fit <- lm(price~bedrooms+bathrooms+floors+waterfront+condition+sqft_living15+sqft_lot15+basement+age+renovation,
data=train_data)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
rating <- c(5,2,3,2,4,3,10)
boxplot(rating, col="yellow")
title("Boxplot of ratings")
#There is an outlier in the rating data series.
knitr::include_graphics("https://data.library.virginia.edu/files/diagnostics3.jpeg")
# set working directory
setwd("C:/Users/woony/OneDrive - Universiti Malaya/WQD 7004/Group Project")
# import 2 datasets to be stored in 2 different dataframes
library(readr)
df_house <- read_csv("kc_house_data.csv")
library(readxl)
df_zipcode <- read_excel("uszips.xlsx")
# KC_Housesales_Data
head(df_house)
colnames(df_house)
# US Zip Codes Database
head(df_zipcode)
colnames(df_zipcode)
## Removing the unnecessary information
df_house$id <- NULL
df_house$sqft_living <- NULL
df_house$sqft_lot <- NULL
df_house$view <- NULL
df_house$grade <- NULL
df_house$view <- NULL
df_house$sqft_above <- NULL
df_house$zip <- df_house$zipcode
df_house$zipcode <- NULL
df_house$lat <- NULL
df_house$long <- NULL
## Changing sqft_basement to basement (1 for yes and 0 for no)
df_house$basement <- df_house$sqft_basement
df_house$sqft_basement <- NULL
df_house$basement = ifelse(df_house$basement>0,"1","0")
## Changing yr_built to age
library("stringr")
df_house$date <- str_sub(df_house$date, - 4, - 1) #Extract the year from date of building sold
df_house$date <- as.numeric(df_house$date) #changing it to numeric for subtraction operation
df_house$age <- df_house$date - df_house$yr_built #age of building when sold is calculated
df_house$date <- NULL
df_house$yr_built <- NULL
## Changing yr_renovated to renovation (1 for yes and 0 for no)
df_house$renovation = ifelse(df_house$"yr_renovated">0,"1","0")
df_house$yr_renovated <- NULL
## Checking for missing values
sum(is.na(df_house))
## Saving new dataframe in csv
write.csv(df_house,'house_data.csv',row.names=FALSE)
# Detecting Outliers
boxplot(df_house$price, ylab = "price")
boxplot(df_house$bedrooms, ylab = "bedroom")
# reexamine the structure of the dataframe now
str(df_house)
## Removing the unnecessary information
df_zipcode <- df_zipcode[ -c(2:3,5,7:18) ]
## Removing duplicate rows using the zipcode variable
library(dplyr)
df_zipcode %>% distinct(zip, .keep_all= TRUE)
write.csv(df_zipcode,'zipcode.csv',row.names=FALSE)
# Merging 2 datasets
df_house <- read_csv("house_data.csv")
df_zip <- read_csv("zipcode.csv")
df <- merge(df_house,df_zipcode,by="zip")
# Examine the frequency table of city and state_name
table(df$city)
table(df$state_name)
# Since all state name is Washington, we can omit the state_name column
df$state_name <- NULL
# print the first few rows of the merged data
head(df, 10)
str(df)
write.csv(df,'merged.csv',row.names=FALSE)
## Rearranging the columns so that the price will be the first variable
df <- df[,c(2:12,1,13)]
## Viewing a Part of the Data
head(df,10)
## Viewing the structure and summary statistics of the data
str(df)
summary(df)
## Checking for the missing values in the data.
NA_values=data.frame(no_of_na_values=colSums(is.na(df)))
head(NA_values,13)
# Counting the number of groups with the same zip code and city
library(dplyr)
freq_zipcode <- as.data.frame(table(df$zip))
freq_zipcode <- freq_zipcode %>% rename(zipcode = Var1)
print(freq_zipcode)
freq_city <- as.data.frame(table(df$city))
freq_city <- freq_city %>% rename(city_name = Var1)
print(freq_city)
library(caTools)
#  set seed to ensure you always have same random numbers generated
set.seed(123)
# splits the data in the ratio mentioned in SplitRatio. After splitting marks these rows as logical TRUE and the the remaining are marked as logical FALSE
sample = sample.split(df$zip,SplitRatio = 0.7)
# creates a training dataset named train_data with rows which are marked as TRUE
train_data =subset(df,sample ==TRUE)
test_data=subset(df, sample==FALSE)
# check the dimensions of train_data and test_data
dim(train_data)
dim(test_data)
library(corrplot)
cor_data=data.frame(train_data[,1:12])
cor_data = cor_data[, -c(9,11)]
correlation=cor(cor_data)
par(mfrow=c(1, 1))
corrplot(correlation,method="color")
library(ggplot2)
library(grid)
library(lattice)
library(gridExtra)
p1=ggplot(data = train_data, aes(x = bedrooms, y = price)) +
geom_jitter() +  geom_smooth(method = "lm", se = FALSE)+labs(title="Scatter plot of Bedrooms and Price", x="Bedrooms",y="Price")
p2=ggplot(data = train_data, aes(x = bathrooms, y = price)) +
geom_jitter() +  geom_smooth(method = "lm", se = FALSE)+labs(title="Scatter plot of Bathrooms and Price", x="Bathrooms",y="Price")
p3=ggplot(data = train_data, aes(x = floors, y = price)) +
geom_jitter() +  geom_smooth(method = "lm", se = FALSE)+labs(title="Scatter plot of Floors and Price", x="Floors",y="Price")
p4=ggplot(data = train_data, aes(x = sqft_living15, y = price)) +
geom_jitter() +  geom_smooth(method = "lm", se = FALSE)+labs(title="Scatter plot of Sqft_living15 and Price", x="Sqft_living15",y="Price")
grid.arrange(p1,p2,p3,p4,nrow=2)
# create an empty list to store p-value of correlation test
p_value_df <- data.frame("Explanatory_Variable" = character(0), "p_value" = double(0), stringsAsFactors = FALSE)
for (i in 2:ncol(cor_data)) {
p_value <- cor.test(cor_data[,1], cor_data[,i])$p.value
new_row <- c(names(cor_data[i]), p_value)
p_value_df[nrow(p_value_df)+1,] <- new_row
}
print(p_value_df)
par(mfrow=c(2, 2))
boxplot(price~waterfront,data=train_data,main="Price vs Waterfront", xlab="waterfront",ylab="price",col="orange",border="brown")
boxplot(price~basement,data=train_data,main="Price vs Basement", xlab="basement",ylab="price",col="orange",border="brown")
boxplot(price~renovation,data=train_data,main="Price vs Renovation", xlab="renovation",ylab="price",col="orange",border="brown")
boxplot(price~city,data=train_data,main="Price vs City", xlab="city",ylab="price",col="orange",border="brown")
ggplot(data=train_data)+geom_boxplot(aes(x=bedrooms,y=price))
outliers=boxplot(train_data$price,plot=FALSE)$out
outliers_data=train_data[which(train_data$price %in% outliers),]
train_data1= train_data[-which(train_data$price %in% outliers),]
par(mfrow=c(1, 2))
# Plot of original data without outliers.
plot(train_data$bedrooms, train_data$price, main="With Outliers", xlab="bedrooms", ylab="price", pch="*", col="red", cex=2)
abline(lm(price ~ bedrooms, data=train_data), col="blue", lwd=3, lty=2)
# Plot of data after removed outliers. Note the change of slope.
plot(train_data1$bedrooms, train_data1$price, main="Outliers removed", xlab="bedrooms", ylab="price", pch="*", col="red", cex=2)
abline(lm(price ~bedrooms, data=train_data1), col="blue", lwd=3, lty=2)
library(ggplot2)
library(ggpubr)
library(gridExtra)
library(tidyverse)
library(broom)
library(AICcmodavg)
library(dplyr)
# Read the variables that will be analyse later as factor
house <- read.csv('merged.csv', header = TRUE, stringsAsFactors=T,
colClasses=c(rep('numeric', 6), 'factor', rep('numeric', 4),rep('factor', 2)))
glimpse(house)
#Calculate frequency, mean and standard deviation
house %>%
group_by(condition) %>%
summarise(condition_freq = n(),
price_mean = mean(price, na.rm = TRUE),
price_sd = sd(price, na.rm = TRUE))
one_way <- aov(price ~ condition, data = house)
summary(one_way)
TukeyHSD(one_way)
options(scipen=999)
ggboxplot(house, x = "condition", y = "price", ylim=c(78000,7700000))
#Calculate frequency, mean and standard deviation
house %>%
group_by(renovation) %>%
summarise(renovation_freq = n(),
price_mean = mean(price, na.rm = TRUE),
price_sd = sd(price, na.rm = TRUE))
one_way <- aov(price ~ renovation, data = house)
summary(one_way)
TukeyHSD(one_way)
options(scipen=999)
ggboxplot(house, x = "renovation", y = "price", ylim=c(78000,7700000))
#Calculate frequency, mean and standard deviation
options(dplyr.print_max = 1e9)
house %>%
group_by(city) %>%
summarise(city_freq = n(),
price_mean = mean(price, na.rm = TRUE),
price_sd = sd(price, na.rm = TRUE))
one_way <- aov(price ~ city, data = house)
summary(one_way)
TukeyHSD(one_way)
options(scipen=999)
p <- ggboxplot(house, x = "city", y = "price", ylim=c(78000,7700000))
p + coord_flip()
library(tidyverse)
library(caret)
library(leaps)
library(MASS)
# Fit the full model
full.model <- lm(price~bedrooms+bathrooms+floors+waterfront+condition+sqft_living15+sqft_lot15+basement+age+renovation,
data=train_data)
summary(full.model)
fit <- lm(price~bedrooms+bathrooms+floors+waterfront+condition+sqft_living15+sqft_lot15+basement+age+renovation,
data=train_data)
step <- stepAIC(fit, direction="both")
step$anova
fit <- lm(price~bedrooms+bathrooms+floors+waterfront+condition+sqft_living15+sqft_lot15+basement+age+renovation,
data=train_data)
step <- stepAIC(fit, direction="backward")
step$anova
